generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  tenants  TenantUser[]
}

model Account {
  id                String @id @default(cuid())
  provider          String
  providerAccountId String
  userId            String
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  users  TenantUser[]
  events Event[]
}

model TenantUser {
  id       String @id @default(cuid())
  userId   String
  tenantId String
  role     String @default("MEMBER")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([userId, tenantId])
}

model Event {
  id           String   @id @default(cuid())
  tenantId     String
  hostname     String?
  path         String?
  referrer     String?
  screenWidth  Int?
  screenHeight Int?
  visitorId    String
  createdAt    DateTime @default(now())

  // Goal Tracking Fields
  type     String  @default("pageview") // 'pageview or 'goal'
  goalName String?

  // Location Fields
  country String?
  city    String?

  // UTM Fields
  utmSource   String?
  utmMedium   String?
  utmCampaign String?
  utmTerm     String?
  utmContent  String?

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId, createdAt])
  @@index([tenantId, visitorId])
  @@index([tenantId, path])
  @@index([tenantId, referrer])
  @@index([tenantId, utmSource])
  @@index([tenantId, utmCampaign])
  @@index([tenantId, type, goalName])
  @@index([tenantId, country])
}
